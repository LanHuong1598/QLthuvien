<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnluu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sP4cALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAs
        DgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIcc
        ALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEH
        QIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAs
        DgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIcc
        ALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEH
        QIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAs
        DgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIccALAsDgEHQIcc
        ALAsDgEHQIccALAsDjmON5RPKJLUrY8t/1HS5z6OIw45HkeApG5Z/nOKQ47LESCpS5b/vOKQ43MESFp7
        lv/c4pA5OAIkrTXLf35xyDwcAZLWluW/DnHIXBwBktaS5b8ecch8HAGSZs/yX5c4ZE6OAEmzZvmvTxwy
        L0eApNmy/NcpDpmbI0DSLFn+6xWHzM8RIOnYWf7rFoesgyNA0rGy/NcvDlkPR4CkQ2f59xCHrIsjQNKh
        svz7iEPWxxEgad9Z/r3EIevkCJC0ryz/fuKQ9XIESNp1ln9Pcci6OQIk7SrLv684ZP0cAZIum+XfWxzS
        gyNA0kWz/PuLQ/pwBEg6b5b/NsQhvTgCJJ01y3874pB+HAGSrpXlvy1xSE+OAElLWf7bE4f05QiQdGWW
        /zbFIb05AiS9P8t/u+KQ/hwBkiz/bYtDtsERIG03y584ZDscAdL2svwZ4pBtcQRI28ny5/3ikO1xBEj9
        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
        VB3fqm8AAAAASUVORK5CYII=
</value>
  </data>
</root>